generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model School {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  casid        String         @unique
  name         String
  address      String
  neighborhood String
  priority     Boolean        @default(false)
  img          String?
  logo         String?
  latitude     String
  longitude    String
  profile      SchoolProfile?
  metrics      Metric[]
  programs     Program[]
}

model SchoolProfile {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  schoolId           String   @unique @db.Uuid
  school             School   @relation(fields: [schoolId], references: [id])
  about              String
  about_bp           String[]
  volunteer_form_url String
  donation_url       String?
  donation_text      String
  testimonial        String?
  testimonial_author String?
  testimonial_video  String?
  testimonial_img    String?
  noteable_video     String?
  principal          String
  instagram_url      String?
  facebook_url       String?
  website_url        String?
}

model Metric {
  id       String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  schoolId String         @db.Uuid
  school   School         @relation(fields: [schoolId], references: [id])
  name     String
  value    Float          @default(0)
  unit     String
  category MetricCategory
}

model Program {
  id       String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  schoolId String          @db.Uuid
  school   School          @relation(fields: [schoolId], references: [id])
  name     String
  details  String
  url      String?
  img      String?
  category ProgramCategory
}

enum MetricCategory {
  about
  outcome
}

enum ProgramCategory {
  volunteer
  donate
  enrichment
}
